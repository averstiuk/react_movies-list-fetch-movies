{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","delay","Promise","resolve","setTimeout","then","fetch","res","json","catch","Response","Error","FindMovie","addMovie","useState","setMovie","setQuery","showMovie","setShowMovie","useEffect","movieFromServer","newMovie","Title","Plot","Poster","imdbID","finally","clearForm","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","disabled","onClick","App","setMovies","prevMovies","undefined","find","prMov","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.20a9ae00.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=b774ecd7';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return wait(1000)\n    .then(() => fetch(`${API_URL}&t=${query}`))\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [showMovie, setShowMovie] = useState(false);\n\n  useEffect(() => {\n    getMovie(query)\n      .then(movieFromServer => {\n        if ('Title' in movieFromServer) {\n          const newMovie = {\n            title: movieFromServer.Title,\n            description: movieFromServer.Plot,\n            imgUrl: movieFromServer.Poster !== 'N/A' ? (\n              movieFromServer.Poster\n            ) : (\n              'https://via.placeholder.com/360x270.png?text=no%20preview'\n            ),\n            imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n            imdbId: movieFromServer.imdbID,\n          };\n\n          setMovie(newMovie);\n        }\n      })\n      .finally();\n  }, [query]);\n\n  const clearForm = () => {\n    setShowMovie(false);\n    setMovie(null);\n  };\n\n  const handleChangeInput = (event: { target: { value: string; }; }) => {\n    setQuery(event.target.value);\n    clearForm();\n  };\n\n  const handleChangeAddButton = () => {\n    clearForm();\n    if (movie) {\n      addMovie(movie);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          setShowMovie(true);\n          setQuery('');\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleChangeInput}\n            />\n          </div>\n          {!movie && showMovie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className=\"button is-light\"\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && showMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleChangeAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n\n        {showMovie && movie && (\n          <MovieCard movie={movie} />\n        )}\n\n        {showMovie && !movie && (\n          <div className=\"Loader\">\n            <div className=\"Loader__content\" />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((prevMovies) => {\n      const search = prevMovies.find(prMov => prMov.imdbId === movie.imdbId);\n\n      if (search === undefined) {\n        return [...prevMovies, movie];\n      }\n\n      return prevMovies;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}