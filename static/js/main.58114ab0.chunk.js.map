{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","delay","Promise","resolve","setTimeout","then","fetch","res","json","catch","Response","Error","FindMovie","addMovie","useState","setMovie","setQuery","search","setSearch","showMovie","setShowMovie","foundMovie","setFoundMovie","showLoader","setShowLoader","useEffect","movieFromServer","newMovie","Title","Plot","Poster","imdbID","finally","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","prevMovies","undefined","find","prMov","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,gBCHZ,SAASC,EAASC,GACvB,OAPYC,EAOA,IANL,IAAIC,SAAQ,SAAAC,GACjBC,WAAWD,EAASF,OAMnBI,MAAK,kBAAMC,MAAM,GAAD,OAVL,2CAUK,cAAiBN,OACjCK,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBAZb,IAAcV,E,UCODW,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAuB,MAAjD,mBAAO5B,EAAP,KAAc6B,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOd,EAAP,KAAcgB,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAoCR,oBAAS,GAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACR1B,EAASC,GACNK,MAAK,SAAAqB,GACJ,GAAI,UAAWA,EAAiB,CAC9B,IAAMC,EAAW,CACfpC,MAAOmC,EAAgBE,MACvBpC,YAAakC,EAAgBG,KAC7BxC,OAAmC,QAA3BqC,EAAgBI,OACtBJ,EAAgBI,OAEhB,4DAEFpC,QAAQ,8BAAD,OAAgCgC,EAAgBK,QACvDjC,OAAQ4B,EAAgBK,QAG1BhB,EAASY,QAETL,GAAc,GAGhBE,GAAc,GACdN,GAAU,MAEXc,YACF,CAACf,IA2BJ,OACE,qCACE,uBACE9B,UAAU,aACV8C,SAXe,SAACC,GACpBA,EAAMC,iBACNf,GAAa,GACbI,GAAc,GACdN,GAAU,IAKR,UAIE,sBAAK/B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQiD,QAAQ,cAAjC,yBAIA,qBAAKjD,UAAU,UAAf,SACE,uBACE,UAAQ,aACRkD,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZpD,UAAU,kBACVqD,MAAOxC,EACPyC,SAtCc,SAACP,GACzBlB,EAASkB,EAAMQ,OAAOF,OACtBlB,GAAc,SAuCND,GAAcF,GACd,mBAAGhC,UAAU,iBAAiB,UAAQ,eAAtC,qDAOJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACIgC,EAUA,wBACE,UAAQ,eACRkB,KAAK,SACLlD,UAAWwD,IACT,kBACA,CAAE,aAAcpB,IALpB,0BATA,wBACE,UAAQ,eACRc,KAAK,SACLlD,UAAU,kBACVyD,UAAW5C,EAJb,4BAsBHqB,GAAcF,GACb,qBAAKhC,UAAU,UAAf,SACE,wBACE,UAAQ,YACRkD,KAAK,SACLlD,UAAU,oBACV0D,QA3EgB,WAV5B7B,EAAS,IACTI,GAAa,GACbL,EAAS,MAUL7B,GACF2B,EAAS3B,IAoED,qCAcR,qBAAKC,UAAU,YAAY,UAAQ,mBAAnC,SACGgC,GAAajC,GACZ,qCACE,oBAAIC,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,aC7IjB4D,EAAM,WACjB,MAA4BhC,mBAAkB,IAA9C,mBAAOlB,EAAP,KAAemD,EAAf,KAcA,OACE,sBAAK5D,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAW0B,SAnBA,SAAC3B,GAChB6D,GAAU,SAACC,GAGT,YAAeC,IAFAD,EAAWE,MAAK,SAAAC,GAAK,OAAIA,EAAMrD,SAAWZ,EAAMY,UAGvD,GAAN,mBAAWkD,GAAX,CAAuB9D,IAGlB8D,cCbbI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.58114ab0.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=b774ecd7';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return wait(1000)\n    .then(() => fetch(`${API_URL}&t=${query}`))\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [search, setSearch] = useState(false);\n  const [showMovie, setShowMovie] = useState(false);\n  const [foundMovie, setFoundMovie] = useState(true);\n  const [showLoader, setShowLoader] = useState(false);\n\n  useEffect(() => {\n    getMovie(query)\n      .then(movieFromServer => {\n        if ('Title' in movieFromServer) {\n          const newMovie = {\n            title: movieFromServer.Title,\n            description: movieFromServer.Plot,\n            imgUrl: movieFromServer.Poster !== 'N/A' ? (\n              movieFromServer.Poster\n            ) : (\n              'https://via.placeholder.com/360x270.png?text=no%20preview'\n            ),\n            imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n            imdbId: movieFromServer.imdbID,\n          };\n\n          setMovie(newMovie);\n        } else {\n          setFoundMovie(false);\n        }\n\n        setShowLoader(false);\n        setSearch(false);\n      })\n      .finally();\n  }, [search]);\n\n  const clearForm = () => {\n    setQuery('');\n    setShowMovie(false);\n    setMovie(null);\n  };\n\n  const handleChangeInput = (event: { target: { value: string; }; }) => {\n    setQuery(event.target.value);\n    setFoundMovie(true);\n  };\n\n  const handleChangeAddButton = () => {\n    clearForm();\n    if (movie) {\n      addMovie(movie);\n    }\n  };\n\n  const handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    setShowMovie(true);\n    setShowLoader(true);\n    setSearch(true);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleChangeInput}\n            />\n          </div>\n          {!foundMovie && showMovie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            {!showMovie ? (\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className=\"button is-light\"\n                disabled={!query}\n              >\n                Find a movie\n              </button>\n            ) : (\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={classNames(\n                  'button is-light',\n                  { 'is-loading': showLoader },\n                )}\n              >\n                Search again\n              </button>\n            )}\n          </div>\n\n          {foundMovie && showMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleChangeAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {showMovie && movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((prevMovies) => {\n      const search = prevMovies.find(prMov => prMov.imdbId === movie.imdbId);\n\n      if (search === undefined) {\n        return [...prevMovies, movie];\n      }\n\n      return prevMovies;\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}